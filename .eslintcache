[{"/Users/gkutateladze/React/react-event-calendar/src/index.tsx":"1","/Users/gkutateladze/React/react-event-calendar/src/reportWebVitals.ts":"2","/Users/gkutateladze/React/react-event-calendar/src/App.tsx":"3","/Users/gkutateladze/React/react-event-calendar/src/_store/index.ts":"4","/Users/gkutateladze/React/react-event-calendar/src/_store/effects/events.effects.ts":"5","/Users/gkutateladze/React/react-event-calendar/src/_store/reducers/events.reducer.ts":"6","/Users/gkutateladze/React/react-event-calendar/src/_store/services/events.services.ts":"7","/Users/gkutateladze/React/react-event-calendar/src/_store/_commonActions/error.actions.ts":"8","/Users/gkutateladze/React/react-event-calendar/src/_store/actions/events.actions.ts":"9","/Users/gkutateladze/React/react-event-calendar/src/components/atoms/EventCard/index.ts":"10","/Users/gkutateladze/React/react-event-calendar/src/components/atoms/EventCard/EventCard.tsx":"11","/Users/gkutateladze/React/react-event-calendar/src/components/atoms/EventForm/index.ts":"12","/Users/gkutateladze/React/react-event-calendar/src/components/atoms/EventForm/EventForm.tsx":"13","/Users/gkutateladze/React/react-event-calendar/src/api/interceptor.ts":"14","/Users/gkutateladze/React/react-event-calendar/src/components/organisms/EventsCalendar/index.ts":"15","/Users/gkutateladze/React/react-event-calendar/src/components/organisms/EventsCalendar/EventsCalendar.tsx":"16","/Users/gkutateladze/React/react-event-calendar/src/_store/selectors/events.selectors.ts":"17","/Users/gkutateladze/React/react-event-calendar/src/components/organisms/AsideForm/index.ts":"18","/Users/gkutateladze/React/react-event-calendar/src/components/organisms/AsideForm/AsideForm.tsx":"19"},{"size":775,"mtime":1609259887448,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1609233812914,"results":"22","hashOfConfig":"21"},{"size":1247,"mtime":1609853237939,"results":"23","hashOfConfig":"21"},{"size":933,"mtime":1609326806775,"results":"24","hashOfConfig":"21"},{"size":1728,"mtime":1609848183385,"results":"25","hashOfConfig":"21"},{"size":1534,"mtime":1609327158350,"results":"26","hashOfConfig":"21"},{"size":775,"mtime":1609259754032,"results":"27","hashOfConfig":"21"},{"size":251,"mtime":1609241759663,"results":"28","hashOfConfig":"21"},{"size":706,"mtime":1609326806776,"results":"29","hashOfConfig":"21"},{"size":64,"mtime":1609245944326,"results":"30","hashOfConfig":"21"},{"size":1096,"mtime":1609274605591,"results":"31","hashOfConfig":"21"},{"size":64,"mtime":1609248024515,"results":"32","hashOfConfig":"21"},{"size":1210,"mtime":1609853594948,"results":"33","hashOfConfig":"21"},{"size":428,"mtime":1609259765072,"results":"34","hashOfConfig":"21"},{"size":79,"mtime":1609265340843,"results":"35","hashOfConfig":"21"},{"size":9060,"mtime":1609330787936,"results":"36","hashOfConfig":"21"},{"size":1244,"mtime":1609327070652,"results":"37","hashOfConfig":"21"},{"size":64,"mtime":1609846334800,"results":"38","hashOfConfig":"21"},{"size":4118,"mtime":1609853258024,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1gihvk0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gkutateladze/React/react-event-calendar/src/index.tsx",[],["81","82"],"/Users/gkutateladze/React/react-event-calendar/src/reportWebVitals.ts",[],"/Users/gkutateladze/React/react-event-calendar/src/App.tsx",[],"/Users/gkutateladze/React/react-event-calendar/src/_store/index.ts",[],"/Users/gkutateladze/React/react-event-calendar/src/_store/effects/events.effects.ts",[],"/Users/gkutateladze/React/react-event-calendar/src/_store/reducers/events.reducer.ts",[],"/Users/gkutateladze/React/react-event-calendar/src/_store/services/events.services.ts",[],"/Users/gkutateladze/React/react-event-calendar/src/_store/_commonActions/error.actions.ts",[],"/Users/gkutateladze/React/react-event-calendar/src/_store/actions/events.actions.ts",[],"/Users/gkutateladze/React/react-event-calendar/src/components/atoms/EventCard/index.ts",[],["83","84"],"/Users/gkutateladze/React/react-event-calendar/src/components/atoms/EventCard/EventCard.tsx",[],"/Users/gkutateladze/React/react-event-calendar/src/components/atoms/EventForm/index.ts",[],"/Users/gkutateladze/React/react-event-calendar/src/components/atoms/EventForm/EventForm.tsx",[],"/Users/gkutateladze/React/react-event-calendar/src/api/interceptor.ts",[],"/Users/gkutateladze/React/react-event-calendar/src/components/organisms/EventsCalendar/index.ts",[],"/Users/gkutateladze/React/react-event-calendar/src/components/organisms/EventsCalendar/EventsCalendar.tsx",["85"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport './EventsCalendar.css';\nimport { IEvent } from '../../../_store/types/events.types';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteEventsPending } from '../../../_store/actions/events.actions';\nimport { IStore } from '../../../_store';\nimport { ReactComponent as Trash } from '../../../assets/icons/trash.svg';\n\ninterface IProps {\n    events: IEvent[]\n}\n\nconst EventsCalendar: React.FC<IProps> = ({events}: IProps) => {\n\n  const dispatch = useDispatch();\n  const counter: number = useSelector((store: IStore) => store.events.counter);\n\n  // -------------------------------------------------------------------------------------------------------------------\n\n  const tenMinuteWidth = 40;\n  const oneMinuteWidth = tenMinuteWidth / 10;\n  const hoursColumnWidth = tenMinuteWidth * 6;\n\n  const hoursArray: number[] = [];\n  for (let i = 0; i < 24; i++) {\n    hoursArray.push(i)\n  }\n  const hoursColumnsJSX = hoursArray.map((item: number) => {\n\n    const date = moment().add(counter, 'days').startOf('day').add(item, 'hour');\n\n    const minutesArray = [0, 1, 2, 3, 4, 5];\n    const minutesColumnsJSX = minutesArray.map((m: number) => {\n      return (\n        <div key={m} className=\"minute-column\" style={{ minWidth: `${tenMinuteWidth}px` }}>\n          {m === 0 && <span className=\"minute-column__label-time\">{date.startOf('hour').format('HH:mm')}</span>}\n        </div>\n      )\n    })\n\n    return (\n      <div key={item} className=\"hour-column\" style={{ minWidth: `${hoursColumnWidth}px` }}>\n        {minutesColumnsJSX}\n      </div>\n    )\n  })\n\n  // -------------------------------------------------------------------------------------------------------------------\n  const rowHeight = 20;\n\n  const getColumns = (events: IEvent[]) => {\n    const result = [[]];\n    let rows = 0;\n\n    events.sort((a: IEvent, b: IEvent) => {\n      return moment(a.startPoint).diff(moment().add(counter, 'days')) - moment(b.startPoint).diff(moment().add(counter, 'days'))\n    });\n\n    for (let i = 0; i < events.length; i++) {\n\n      const start = moment(events[i].startPoint).diff(moment().add(counter, 'days'));\n\n      for (let j = 0; j < result.length; j++) {\n\n        const lastInRow: IEvent = result[j][result[j].length - 1];\n        const end = lastInRow ? moment(lastInRow.endPoint).diff(moment().add(counter, 'days')) : 0;\n\n        if (result[j].length === 0 || start >= end) {\n          // @ts-ignore\n          result[j].push(events[i]);\n          events[i].row = j;\n          rows = Math.max(rows, j)\n          break;\n        } else {\n          result.push([]);\n        }\n      }\n    }\n\n    return {\n      event: result,\n      rows: rows\n    }\n  };\n\n  const countHeight = (row: number, rowHeight: number): number => {\n    return rowHeight + row * rowHeight * 2.5;\n  }\n\n  const { rows } = getColumns(events);\n\n// —-----------------------------------------------------------------------------------------------------------------\n\n  const timeToCoordinate = useCallback((time: string | undefined) => {\n    return moment(time).diff(moment().add(counter, 'days').startOf('day')) / 1000 / 60;\n  }, [counter])\n\n// —-----------------------------------------------------------------------------------------------------------------\n\n  const unavailableTimeJSX = events.map((event: IEvent, i: number) => {\n\n    const eventStartPoint = timeToCoordinate(event.startPoint)\n    const eventWidth = oneMinuteWidth && oneMinuteWidth * moment(event.endPoint).diff(moment(event.startPoint)) / 1000 / 60;\n\n    return (\n      <div key={i} className=\"event-calendar__unavailable-time\" style={{\n        transform: `translateX(${eventStartPoint * oneMinuteWidth}px)`,\n        width: `${eventWidth - 1}px`,\n      }}/>\n    )\n  });\n\n// —-----------------------------------------------------------------------------------------------------------------\n\n  const [timeLineX, setTimeLineX] = useState<number>(timeToCoordinate(moment().format()) * oneMinuteWidth);\n  const timeLine = useRef<HTMLDivElement>(null);\n\n  const [startInterval, setStartInterval] = useState<boolean>(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (+moment().format('s') === 0) {\n        setStartInterval(true);\n        clearInterval(interval);\n      }\n    }, 1000)\n    return () => {\n      // dispatch(resetDayCounter());\n      clearInterval(interval)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    if (startInterval) {\n      const interval = setInterval(() => {\n        setTimeLineX(timeToCoordinate(moment().add(counter, 'days').format()) * oneMinuteWidth);\n      }, 60000)\n      return () => {\n        // dispatch(resetDayCounter());\n        clearInterval(interval)\n      }\n    }\n  }, [startInterval, counter, dispatch, oneMinuteWidth, timeToCoordinate])\n\n// —-----------------------------------------------------------------------------------------------------------------\n\n  const scrollContainer = useRef<HTMLDivElement>(null);\n  const [timelineTextPosition, setTimelineTextPosition] = useState<number>(0);\n  const timelineText = useRef<HTMLDivElement>(null);\n\n  const controlTime = useCallback(() => {\n    if (timeLine.current && scrollContainer.current && timelineText.current) {\n\n      const timeLineOffSet = timeLine.current.getBoundingClientRect().left;\n      const screenWidth = scrollContainer.current.getBoundingClientRect().width;\n      const screenPadding = scrollContainer.current.getBoundingClientRect().left;\n      const timelineTextWidth = timelineText.current.getBoundingClientRect().width\n\n      if (timeLineOffSet - screenPadding >= screenWidth - timelineTextWidth) {\n        setTimelineTextPosition(screenWidth + scrollContainer.current.scrollLeft - timelineTextWidth - 2);\n      } else if (timeLineOffSet < screenPadding) {\n        setTimelineTextPosition(scrollContainer.current.scrollLeft - 2);\n      } else {\n        setTimelineTextPosition(timeLineX)\n      }\n    }\n  }, [timeLineX])\n\n  const scrollIntoView = useCallback((behavior: 'smooth' | 'auto' = 'smooth') => {\n\n    scrollContainer.current && scrollContainer.current.scrollTo({\n      left: timeLineX - window.innerWidth / 2,\n      top: 0,\n      behavior\n    })\n  }, [timeLineX])\n\n  useEffect(() => {\n    scrollIntoView('auto');\n    // eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    controlTime()\n  }, [timeLineX, counter, controlTime])\n\n// —-----------------------------------------------------------------------------------------------------------------\n\n  const eventsJSX = events.map((event: IEvent, i: number) => {\n\n    const eventStartPoint = timeToCoordinate(event.startPoint)\n    const eventWidth = oneMinuteWidth && oneMinuteWidth * moment(event.endPoint).diff(moment(event.startPoint)) / 1000 / 60;\n    const row = event.row !== undefined ? event.row : 1;\n    const verticalShift = countHeight(row, rowHeight);\n\n    const startPointText = eventStartPoint === 0 ? moment(event.from).format('DD.MM H:mm') : moment(event.from).format('H:mm')\n    const startPointClass = moment(event.startPoint).format() > moment(event.from).format();\n    const endPointClass = moment(event.endPoint).format() < moment(event.to).format();\n\n    const deleteEvent = () => {\n      dispatch(deleteEventsPending(event._id))\n    }\n\n    return (\n      <div key={i} className=\"event-item__wrapper\" style={{\n        transform: `translateX(${eventStartPoint * oneMinuteWidth}px)`,\n        width: `${eventWidth}px`,\n        top: `${verticalShift}px`,\n      }}>\n        <div>\n          <div className={`event-item ${startPointClass ? 'event-item--start-threshold' : ''} ${endPointClass ? 'event-item--end-threshold' : ''}`}>\n            <div className=\"event-item__header\">\n              <span className=\"event-item__description\"><Trash className=\"event-item__delete\" onClick={deleteEvent}/><span className=\"event-item__title\">{event.title}</span>{event.description}</span>\n            </div>\n            <span className=\"event-item__start-date\">{startPointText}</span>\n          </div>\n        </div>\n      </div>\n    )\n  })\n\n// —-----------------------------------------------------------------------------------------------------------------\n\n  const stageHeight = countHeight(rows, rowHeight) + 2.5 * (rowHeight);\n\n  return (\n    <div className='events-calendar__scroll-container'\n         style={{ height: `${stageHeight}px` }}\n         onScroll={controlTime}\n         ref={scrollContainer}>\n      {unavailableTimeJSX}\n      {counter === 0 &&\n      <>\n          <div className=\"event-calendar__current-time-text\"\n               style={{ transform: `translateX(${timelineTextPosition}px)` }}\n               ref={timelineText}\n               onClick={() => scrollIntoView()}\n          >{moment().format('HH:mm')}</div>\n          <div className=\"event-calendar__current-time-line\" style={{ transform: `translateX(${timeLineX}px)` }}\n               ref={timeLine}/>\n      </>\n      }\n      {hoursColumnsJSX}\n      {eventsJSX}\n    </div>\n  );\n};\n\nexport default EventsCalendar;\n","/Users/gkutateladze/React/react-event-calendar/src/_store/selectors/events.selectors.ts",[],"/Users/gkutateladze/React/react-event-calendar/src/components/organisms/AsideForm/index.ts",[],"/Users/gkutateladze/React/react-event-calendar/src/components/organisms/AsideForm/AsideForm.tsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":9,"column":28,"nodeType":"94","messageId":"95","endLine":9,"endColumn":37},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],["96"],["97"],"@typescript-eslint/no-unused-vars","'TrashOpen' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]